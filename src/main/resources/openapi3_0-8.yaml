openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /people/{id}:
    get:
      tags:
        - person-controller
      operationId: get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Person'
    put:
      tags:
        - person-controller
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Person'
    delete:
      tags:
        - person-controller
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /people/:
    get:
      tags:
        - person-controller
      operationId: all
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
    post:
      tags:
        - person-controller
      operationId: crate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Person'
  /people/by-claim/{claimNumber}:
    get:
      tags:
        - person-controller
      operationId: findByClaimNumber
      parameters:
        - name: claimNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
  /people/by-claim-and-type/{claimNumber}/{personType}:
    get:
      tags:
        - person-controller
      operationId: findByClaimNumber_1
      parameters:
        - name: claimNumber
          in: path
          required: true
          schema:
            type: string
        - name: personType
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
components:
  schemas:
    Address:
      type: object
      properties:
        street:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
    Person:
      required:
        - claimNumber
      type: object
      properties:
        id:
          type: string
        claimNumber:
          type: string
        type:
          type: string
          enum:
            - PLAINTIFF
            - DEFENDANT
            - LAWYER
            - JUDGE
        firstName:
          type: string
        lastName:
          type: string
        address:
          $ref: '#/components/schemas/Address'
